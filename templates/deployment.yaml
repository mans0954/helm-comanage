apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "comanage.fullname" . }}
  labels:
    app: {{ template "comanage.name" . }}
    chart: {{ template "comanage.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "comanage.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "comanage.name" . }}
        release: {{ .Release.Name }}
    spec:
      volumes:
        - name: etc-comanage
          configMap:
            name:  {{ .Release.Name }}-configmap 
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name:  COMANAGE_REGISTRY_DATASOURCE
              value: Database/Postgres
            - name:  COMANAGE_REGISTRY_DATABASE
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name:  COMANAGE_REGISTRY_DATABASE_HOST
              value: {{ template "postgresql.fullname" . }}
            - name:  COMANAGE_REGISTRY_DATABASE_USER
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name:  COMANAGE_REGISTRY_DATABASE_USER_PASSWORD
              value: Tamesis
#              valueFrom:
#                secretKeyRef:
#                  name: {{ template "postgresql.fullname" . }}
#                  key: postgresql-password
            - name:  COMANAGE_REGISTRY_ADMIN_GIVEN_NAME
              value: Alfred
            - name:  COMANAGE_REGISTRY_ADMIN_FAMILY_NAME
              value: Wessex
            - name:  COMANAGE_REGISTRY_ADMIN_USERNAME
              value: "admin@bar.ac.uk"

          volumeMounts:
            - mountPath: /etc/comanage
              name: etc-comanage
            
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /registry/
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /registry/
              port: https
              scheme: HTTPS
            initialDelaySeconds: 60
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
